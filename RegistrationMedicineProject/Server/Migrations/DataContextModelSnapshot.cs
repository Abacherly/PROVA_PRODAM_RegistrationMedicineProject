// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistrationMedicineProject.Server.Data;

#nullable disable

namespace RegistrationMedicineProject.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RegistrationMedicineProject.Shared.RegistrationMedicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Administration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RetentionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RetentionId");

                    b.ToTable("RegistrationMedicines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Administration = "Via Oral",
                            Class = "Analgésico",
                            Classification = "Tarja Vermelha",
                            Name = "Nimesulida",
                            RetentionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Administration = "Via Oral",
                            Class = "Antibiótico",
                            Classification = "Tarja Vermelha",
                            Name = "Azitromicina",
                            RetentionId = 2
                        });
                });

            modelBuilder.Entity("RegistrationMedicineProject.Shared.Retention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Retentions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Não"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sim"
                        });
                });

            modelBuilder.Entity("RegistrationMedicineProject.Shared.RegistrationMedicine", b =>
                {
                    b.HasOne("RegistrationMedicineProject.Shared.Retention", "Retention")
                        .WithMany()
                        .HasForeignKey("RetentionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Retention");
                });
#pragma warning restore 612, 618
        }
    }
}
