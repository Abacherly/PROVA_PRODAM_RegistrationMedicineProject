@page "/medicine"
@page "/medicine/{id:int}"


@inject IRegistrationMedicineService RegistrationMedicineService


@if (Id == null) {
  <PageTitle>Cadastrar Novo Medicamento</PageTitle>
    <h3>Cadastrar Novo Medicamento</h3>
}
else
{
    <PageTitle>Atualizar @medicine.Name</PageTitle>
    <h3>Atualizar @medicine.Name</h3>
    
}

<EditForm Model="medicine" OnSubmit="HandleSubmit">
    <div>
        <label for="name">Nome do Medicamento</label>
        <InputText id="name" @bind-Value="medicine.Name" class="form-control"></InputText>
    </div>
    <div>
        <label for="administration">Forma de Administração</label>
        <InputText id="administration" @bind-Value="medicine.Administration" class="form-control"></InputText>
    </div>
    <div>
        <label for="class">Classe do Medicamento</label>
        <InputText id="class" @bind-Value="medicine.Class" class="form-control"></InputText>
    </div>
    <div>
        <label for="classification">Classificação</label>
        <InputText id="classification" @bind-Value="medicine.Classification" class="form-control"></InputText>
    </div>
    <div>
        <label>Retenção de Receita</label><br />
        <InputSelect @bind-Value="medicine.RetentionId" class="form-select">
            @foreach (var retention in RegistrationMedicineService.Retentions)
            {
                <option Value="@retention.Id">@retention.Name</option>
            }
    </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteMedicine">Deletar Medicamento</button>

</EditForm>

@code {

    [Parameter]

    public int? Id { get; set; }

    string btnText = string.Empty;

    RegistrationMedicine medicine = new RegistrationMedicine { Retention = new Retention() };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Salvar Medicamento" : "Atualizar Medicamento";
        await RegistrationMedicineService.GetRetentions();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            medicine.Retention = RegistrationMedicineService.Retentions[0];
            medicine.RetentionId = medicine.Retention.Id;
        }
        else
        {
            medicine = await RegistrationMedicineService.GetSingleMedicine((int)Id);
        }
    }

    async void HandleSubmit()
    {
        if (Id == null)
        {
            await RegistrationMedicineService.CreateMedicine(medicine);
        }
        else
        {
            await RegistrationMedicineService.UpdateMedicine(medicine);
        }
    }

    async Task DeleteMedicine()
    {
        await RegistrationMedicineService.DeleteMedicine(medicine.Id);
    }
}
